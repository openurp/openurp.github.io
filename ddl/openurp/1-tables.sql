create table base.buildings (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, campus_id integer not null, building_type_id integer, name varchar(80) not null, updated_at timestamp not null);
create table base.campuses (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, name varchar(80) not null, updated_at timestamp not null);
create table base.department_categories (id integer not null, end_on date, parent_id integer, updated_at timestamp not null, begin_on date not null, indexno varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.departments (research boolean not null, en_name varchar(100), teaching boolean not null, code varchar(10) not null, id integer not null, remark varchar(200), category_id integer, short_name varchar(100), end_on date, school_id integer not null, parent_id integer, name varchar(80) not null, updated_at timestamp not null, begin_on date not null, indexno varchar(20) not null);
create table base.departments_campuses (department_id integer not null, campus_id integer not null);
create table base.people (phonetic_name varchar(100), political_status_id integer, country_id integer, compatriot_type_id integer, code varchar(30) not null unique, id bigint not null, language_id integer, gender_id integer not null, birthday date not null, id_type_id integer not null, family_name varchar(80), given_name varchar(80), middle_name varchar(50), formated_name varchar(100) not null, updated_at timestamp not null, home_town varchar(255), nation_id integer, birthplace varchar(255), former_name varchar(100), religion_id integer);
create table base.rooms (school_id integer not null, room_type_id integer not null, building_id integer, code varchar(10) not null, department_id integer, id integer not null, remark varchar(200), end_on date, campus_id integer not null, capacity integer not null, name varchar(80) not null, updated_at timestamp not null, floor integer not null, begin_on date not null);
create table base.schools (name varchar(50) not null, institution_id integer not null, logo_url varchar(255) not null, code varchar(10) not null unique, id integer not null, begin_on date not null, short_name varchar(255), end_on date);
create table base.user_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.users (school_id integer not null, email varchar(80), code varchar(30) not null, department_id integer not null, id bigint not null, remark varchar(200), begin_on date not null, category_id integer not null, end_on date, mobile varchar(15), name varchar(80) not null, updated_at timestamp not null);
create table code_gb.academic_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.compatriot_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.countries (id integer not null, begin_on date not null, short_name varchar(50) not null, end_on date, updated_at timestamp not null, alpha3_code varchar(3) not null, alpha2_code varchar(2) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.degree_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.degrees (id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.discipline_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.divisions (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.duty_grades (duty_type_id integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.duty_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.education_degrees (result_id integer not null, id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.education_results (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.employ_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.family_relationships (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.genders (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.health_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.id_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.job_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.language_abilities (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.languages (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.marital_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.nations (id integer not null, end_on date, updated_at timestamp not null, begin_on date not null, alpha_code varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.political_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.post_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.post_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.professional_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.professional_titles (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.religions (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_gb.study_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.activity_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.admission_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.blood_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.book_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.building_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.classroom_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.course_take_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.day_parts (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.difficulty_causes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.difficulty_degrees (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.discipline_catalogs (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.disciplines (catalog_id integer not null, id integer not null, begin_on date not null, category_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.edu_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.education_levels (to_level_id integer not null, id integer not null, begin_on date not null, from_level_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.education_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.election_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.enroll_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.exam_forms (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.exam_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.exam_statuses (attended boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, cheating boolean not null, deferred boolean not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.exam_types (id integer not null, begin_on date not null, end_on date, deferred boolean not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.family_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.grade_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, exam_type_id integer, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.grading_modes (numerical boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.household_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.hsk_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.institutions (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.passport_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.press_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.presses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.publication_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.publications (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.railway_stations (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, jianpin varchar(50) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.room_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.social_unit_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.staff_source_types (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.staff_types (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.std_alter_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.std_alter_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.student_alter_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.student_alter_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.student_punishment_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.student_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.teach_lang_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.tutor_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.uee_subject_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.visa_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code_hb.work_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_award.honor_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, be_rated boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), period varchar(255) not null, honor_type_id integer not null);
create table edu_award.honor_levels (name varchar(255) not null, honor_category_id integer not null, enabled boolean not null, code varchar(255) not null, id integer not null, award_amount float4 not null, discription varchar(255));
create table edu_award.honor_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, sequence varchar(255) not null);
create table edu_award.scholarship_awards (semester_id integer not null, be_approved boolean not null, scholarship_level_id integer not null, std_id bigint not null, id bigint not null, scholarship_category_id integer not null, award_amount float4 not null);
create table edu_award.scholarship_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, be_rated boolean not null, code varchar(255) not null, id integer not null, scholarship_type_id integer not null, begin_on date not null, end_on date, discription varchar(255), period varchar(255) not null);
create table edu_award.scholarship_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), scholarship_category_id integer not null, award_amount float4 not null);
create table edu_award.scholarship_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, idx varchar(255) not null);
create table edu_award.std_honor_awards (semester_id integer not null, std_id bigint not null, honor_level_id integer not null, id bigint not null, award_amount float4 not null, honor_category_id integer not null, be_approved boolean not null);
create table edu_award.stipend_awards (semester_id integer not null, be_approved boolean not null, std_id bigint not null, stipend_level_id integer not null, id bigint not null, stipend_category_id integer not null, award_amount float4 not null);
create table edu_award.stipend_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, be_rated boolean not null, code varchar(255) not null, id integer not null, begin_on date not null, end_on date, discription varchar(255), period varchar(255) not null);
create table edu_award.stipend_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, stipend_category_id integer not null, award_amount float4 not null, discription varchar(255));
create table edu_award.subsidy_awards (semester_id integer not null, be_approved boolean not null, std_id bigint not null, id bigint not null, subsidy_level_id integer not null, award_amount float4 not null, subsidy_category_id integer not null);
create table edu_award.subsidy_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, be_rated boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), period varchar(255) not null);
create table edu_award.subsidy_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, award_amount float4 not null, discription varchar(255), subsidy_category_id integer not null);
create table edu_base.book_award_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.book_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.calendars (school_id integer not null, code varchar(10) not null, id integer not null, begin_on date not null, end_on date, first_weekday integer not null, name varchar(80) not null, updated_at timestamp not null);
create table edu_base.classrooms (exam_capacity integer not null, project_id integer not null, en_name varchar(255), room_type_id integer not null, code varchar(20) not null, id bigint not null, begin_on date not null, end_on date, name varchar(100) not null, updated_at timestamp not null, room_id integer, short_name varchar(255), course_capacity integer not null, campus_id integer not null);
create table edu_base.course_ability_rates (rate integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.course_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.course_hour_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.course_hours (course_id bigint not null, weeks integer not null, credit_hours integer not null, id bigint not null, hour_type_id integer not null);
create table edu_base.course_types (practical boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.course_units (name varchar(20) not null, setting_id integer not null, en_name varchar(30) not null, begin_at smallint not null, id integer not null, indexno integer not null, part_id integer not null, end_at smallint not null);
create table edu_base.courses (course_type_id integer not null, code varchar(32) not null unique, remark varchar(500), begin_on date not null, end_on date, name varchar(222) not null, updated_at timestamp not null, weeks integer not null, project_id integer not null, en_name varchar(300), credit_hours integer not null, credits float4 not null, has_makeup boolean not null, exam_mode_id integer not null, department_id integer not null, practical boolean not null, id bigint not null, calgp boolean not null, week_hours integer not null, category_id integer);
create table edu_base.courses_ability_rates (course_id bigint not null, course_ability_rate_id integer not null);
create table edu_base.courses_grading_modes (course_id bigint not null, grading_mode_id integer not null);
create table edu_base.courses_levels (course_id bigint not null, academic_level_id integer not null);
create table edu_base.courses_majors (course_id bigint not null, major_id bigint not null);
create table edu_base.courses_teachers (course_id bigint not null, teacher_id bigint not null);
create table edu_base.courses_textbooks (course_id bigint not null, textbook_id bigint not null);
create table edu_base.courses_xmajors (course_id bigint not null, major_id bigint not null);
create table edu_base.direction_journals (direction_id bigint not null, id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, level_id integer not null);
create table edu_base.directions (project_id integer not null, en_name varchar(255), code varchar(32) not null unique, id bigint not null, remark varchar(200), begin_on date not null, end_on date, major_id bigint not null, name varchar(100) not null, updated_at timestamp not null);
create table edu_base.holidays (school_id integer not null, name varchar(20) not null, id integer not null, begin_on date not null, end_on date not null);
create table edu_base.instructors (updated_at timestamp not null, project_id integer not null, id bigint not null, begin_on date not null, end_on date, user_id bigint not null);
create table edu_base.major_disciplines (discipline_code varchar(50), id bigint not null, begin_on date not null, category_id integer not null, end_on date, major_id bigint not null);
create table edu_base.major_journals (id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, major_id bigint not null, level_id integer not null);
create table edu_base.majors (en_name varchar(150), code varchar(20) not null unique, id bigint not null, begin_on date not null, short_name varchar(255), end_on date, name varchar(50) not null, updated_at timestamp not null, project_id integer not null, remark varchar(100));
create table edu_base.project_codes (project_id integer not null, code_ids varchar(2000) not null, id bigint not null, class_name varchar(100) not null);
create table edu_base.projects (school_id integer not null, description varchar(500) not null, code varchar(10) not null unique, begin_on date not null, category_id integer not null, end_on date, minor boolean not null, name varchar(100) not null, updated_at timestamp not null, id integer not null);
create table edu_base.projects_calendars (project_id integer not null, calendar_id integer not null);
create table edu_base.projects_campuses (project_id integer not null, campus_id integer not null);
create table edu_base.projects_departments (project_id integer not null, department_id integer not null);
create table edu_base.projects_levels (project_id integer not null, education_level_id integer not null);
create table edu_base.projects_properties (project_id integer not null, value varchar(255) not null, name varchar(255) not null);
create table edu_base.projects_std_labels (project_id integer not null, std_label_id integer not null);
create table edu_base.projects_std_types (project_id integer not null, std_type_id integer not null);
create table edu_base.school_lengths (maximum float4 not null, id bigint not null, from_grade varchar(10) not null, minimum float4 not null, major_id bigint not null, level_id integer not null, to_grade varchar(10), normal float4 not null);
create table edu_base.semesters (name varchar(10) not null, school_year varchar(10) not null, id integer not null, remark varchar(255), begin_on date not null, end_on date not null, calendar_id integer not null, code varchar(15) not null);
create table edu_base.squads (project_id integer not null, direction_id bigint, std_count integer not null, code varchar(20) not null, department_id integer not null, begin_on date not null, std_type_id integer not null, plan_count integer not null, short_name varchar(255), end_on date, campus_id integer not null, level_id integer not null, name varchar(50) not null, updated_at timestamp not null, instructor_id bigint, id bigint not null, grade varchar(10) not null, remark varchar(100), major_id bigint, tutor_id bigint);
create table edu_base.std_label_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.std_labels (id integer not null, begin_on date not null, label_type_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.std_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.student_states (direction_id bigint, std_id bigint not null, id bigint not null, end_on date, campus_id integer not null, major_id bigint not null, department_id integer not null, inschool boolean not null, squad_id bigint, grade varchar(255) not null, remark varchar(200), begin_on date not null, status_id integer not null);
create table edu_base.students (duration float4 not null, updated_at timestamp not null, project_id integer not null, code varchar(30) not null, id bigint not null, std_type_id integer not null, end_on date not null, registed boolean not null, level_id integer not null, study_on date not null, state_id bigint, remark varchar(200), graduate_on date not null, begin_on date not null, study_type_id integer not null, person_id bigint not null, tutor_id bigint, user_id bigint not null);
create table edu_base.students_labels (student_id bigint not null, std_label_id integer not null, std_label_type_id integer not null);
create table edu_base.teacher_types (id integer not null, external boolean not null, begin_on date not null, end_on date, parttime boolean not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_base.teachers (updated_at timestamp not null, project_id integer not null, id bigint not null, remark varchar(255), formal_hr boolean not null, person_id bigint, title_id integer, end_on date, user_id bigint not null, parttime boolean not null, teacher_type_id integer not null, retired boolean not null, begin_on date not null, status_id integer not null);
create table edu_base.textbooks (name varchar(300) not null, book_type_id integer, project_id integer not null, description varchar(300), edition varchar(50) not null, published_on date not null, id bigint not null, press_id integer, author varchar(80) not null, series varchar(255), award_org varchar(255), price float4, made_in_school boolean not null, remark varchar(255), begin_on date not null, isbn varchar(100), category_id integer, award_type_id integer, end_on date, translator varchar(255));
create table edu_base.time_settings (name varchar(20) not null, project_id integer not null, minutes_per_unit smallint not null, id integer not null, begin_on date not null, end_on date, campus_id integer);
create table edu_course.clazz_groups (semester_id integer not null, name varchar(255) not null, course_id bigint, project_id integer not null, id bigint not null, teach_depart_id integer);
create table edu_course.clazz_tags (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, color varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_course.clazzes (semester_id integer not null, state integer not null, project_id integer not null, id bigint not null, exam_duration smallint not null, exam_form_id integer not null, exam_room_type_id integer not null, exam_begin_at smallint not null, exam_on date, exam_end_at smallint not null, has_makeup boolean not null, exam_mode_id integer not null, material_id bigint, campus_id integer not null, name varchar(500) not null, updated_at timestamp not null, course_id bigint not null, reserved integer not null, locked boolean not null, gender_ratio smallint not null, grade varchar(20), depart_id integer, capacity integer not null, actual integer not null, subject varchar(255), course_type_id integer not null, teach_depart_id integer not null, remark varchar(255), crn varchar(32) not null, weekstate bigint not null, period integer not null, room_type_id integer not null, group_id bigint, lang_type_id integer not null);
create table edu_course.clazzes_tags (clazz_id bigint not null, clazz_tag_id integer not null);
create table edu_course.clazzes_teachers (clazz_id bigint not null, teacher_id bigint not null);
create table edu_course.course_takers (semester_id integer not null, updated_at timestamp not null, course_id bigint not null, clazz_id bigint not null, std_id bigint not null, alternative boolean not null, id bigint not null, restriction_id bigint, take_type_id integer not null, free_listening boolean not null, election_mode_id integer not null, remark varchar(100));
create table edu_course.lessons (clazz_id bigint not null, id bigint not null, date date not null, content varchar(255) not null, end_at smallint not null, begin_at smallint not null);
create table edu_course.lessons_rooms (lesson_id bigint not null, classroom_id bigint not null);
create table edu_course.lessons_teachers (lesson_id bigint not null, teacher_id bigint not null);
create table edu_course.materials (updated_at timestamp not null, confirmed boolean not null, passed boolean, remark varchar(200), extra varchar(200), clazz_id bigint not null, state integer not null, reason varchar(300), ordered boolean not null, references varchar(500), id bigint not null);
create table edu_course.materials_books (material_id bigint not null, textbook_id bigint not null);
create table edu_course.restriction_items (inclusive boolean not null, restriction_id bigint not null, content varchar(255) not null, id bigint not null, meta integer not null);
create table edu_course.restrictions (clazz_id bigint not null, cur_count integer not null, max_count integer not null, id bigint not null, prime boolean not null, parent_id bigint);
create table edu_course.sessions (clazz_id bigint not null, id bigint not null, remark varchar(200), start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null);
create table edu_course.sessions_rooms (session_id bigint not null, classroom_id bigint not null);
create table edu_course.sessions_teachers (session_id bigint not null, teacher_id bigint not null);
create table edu_curricula.syllabus_section_titles (name varchar(80) not null, id integer not null);
create table edu_curricula.syllabus_sections (id bigint not null, content varchar(3900) not null, syllabus_id bigint not null, title_id integer not null);
create table edu_curricula.syllabuses (author_id bigint not null, updated_at timestamp not null, course_id bigint not null, passed boolean not null, id bigint not null, begin_on date not null, file_size integer not null, name varchar(50) not null, mime_type varchar(255) not null, key varchar(200) not null, end_on date, locale varchar(255) not null);
create table edu_evaluation.clazz_eval_stats (total_tickets integer not null, teacher_id bigint not null, clazz_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, rank integer not null, add_score float8 not null, id bigint not null, total_score float4 not null, depart_rank integer not null, questionnaire_id bigint not null, stat_at timestamp not null, semester_id integer not null);
create table edu_evaluation.clazz_option_stats (amount integer not null, id bigint not null, question_stat_id bigint not null, option_id bigint not null);
create table edu_evaluation.clazz_question_stats (eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null, question_id bigint not null);
create table edu_evaluation.clazz_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu_evaluation.course_eval_stats (total_tickets integer not null, course_id bigint not null, teacher_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, rank integer not null, add_score float8 not null, id bigint not null, total_score float4 not null, depart_rank integer not null, questionnaire_id bigint not null, stat_at timestamp not null, semester_id integer not null);
create table edu_evaluation.course_option_stats (amount integer not null, id bigint not null, question_stat_id bigint not null, option_id bigint not null);
create table edu_evaluation.course_question_stats (eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null, question_id bigint not null);
create table edu_evaluation.course_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu_evaluation.depart_eval_stats (semester_id integer not null, total_tickets integer not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, id bigint not null, total_score float4 not null, department_id integer not null, questionnaire_id bigint not null, stat_at timestamp not null);
create table edu_evaluation.depart_option_stats (amount integer not null, id bigint not null, question_stat_id bigint not null, option_id bigint not null);
create table edu_evaluation.depart_question_stats (eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null, question_id bigint not null);
create table edu_evaluation.depart_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu_evaluation.evaluate_results (student_id bigint not null, teacher_id bigint not null, clazz_id bigint not null, score float4 not null, department_id integer not null, id bigint not null, evaluate_at timestamp not null, questionnaire_id bigint not null, stat_type integer not null, remark varchar(20) not null);
create table edu_evaluation.evaluation_criteria_items (name varchar(255) not null, criteria_id bigint not null, min float4 not null, id bigint not null, max float4 not null);
create table edu_evaluation.evaluation_criterias (name varchar(100) not null, project_id integer not null, id bigint not null, depart_id integer not null);
create table edu_evaluation.final_teacher_scores (semester_id integer not null, teacher_id bigint not null, supvi_score float4 not null, id bigint not null, std_score float4 not null, depart_score float4 not null, rank integer not null, score float4 not null, depart_rank integer not null);
create table edu_evaluation.option_groups (name varchar(50) not null, project_id integer not null, id bigint not null, oppo_val float4 not null);
create table edu_evaluation.options (name varchar(50) not null, proportion float4 not null, id bigint not null, option_group_id bigint not null);
create table edu_evaluation.question_results (question_id bigint not null, result_id bigint not null, id bigint not null, question_type_id bigint not null, score float4 not null, option_id bigint not null);
create table edu_evaluation.question_types (state boolean not null, project_id integer not null, en_name varchar(100), id bigint not null, remark varchar(100), begin_on date not null, end_on date, name varchar(50) not null, updated_at timestamp not null, priority integer not null);
create table edu_evaluation.questionnaire_clazzes (clazz_id bigint not null, id bigint not null, evaluate_by_teacher boolean not null, questionnaire_id bigint not null);
create table edu_evaluation.questionnaires (updated_at timestamp not null, state boolean not null, project_id integer not null, description varchar(500) not null, id bigint not null, create_by varchar(255) not null, begin_on date not null, depart_id integer not null, title varchar(200) not null, end_on date, remark varchar(200));
create table edu_evaluation.questionnaires_questions (questionnaire_id bigint not null, question_id bigint not null);
create table edu_evaluation.questions (state boolean not null, project_id integer not null, score float4 not null, remark varchar(200), begin_on date not null, option_group_id bigint not null, content varchar(400) not null, question_type_id bigint not null, depart_id integer not null, end_on date, updated_at timestamp not null, priority integer not null, addition boolean not null, id bigint not null);
create table edu_evaluation.school_eval_stats (total_tickets integer not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null, stat_at timestamp not null, semester_id integer not null);
create table edu_evaluation.school_option_stats (amount integer not null, id bigint not null, question_stat_id bigint not null, option_id bigint not null);
create table edu_evaluation.school_question_stats (eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null, question_id bigint not null);
create table edu_evaluation.school_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu_evaluation.teacher_eval_stats (total_tickets integer not null, teacher_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, rank integer not null, add_score float8 not null, id bigint not null, total_score float4 not null, depart_rank integer not null, questionnaire_id bigint not null, stat_at timestamp not null, semester_id integer not null);
create table edu_evaluation.teacher_option_stats (amount integer not null, id bigint not null, question_stat_id bigint not null, option_id bigint not null);
create table edu_evaluation.teacher_question_stats (eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null, question_id bigint not null);
create table edu_evaluation.teacher_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu_evaluation.teacher_remessages (updated_at timestamp not null, remessage varchar(255) not null, text_evaluation_id bigint not null, id bigint not null, created_at timestamp not null, visible boolean not null);
create table edu_evaluation.teacher_remessages_students (teacher_remessage_id bigint not null, student_id bigint not null);
create table edu_evaluation.text_evaluations (student_id bigint not null, teacher_id bigint not null, content varchar(255) not null, evaluate_by_teacher boolean not null, evaluate_at timestamp not null, clazz_id bigint not null, state boolean not null, id bigint not null);
create table edu_exam.exam_activities (semester_id integer not null, exam_type_id integer not null, begin_at smallint not null, id bigint not null, remark varchar(100), exam_on date not null, end_at smallint not null, clazz_id bigint not null, state integer not null, std_count integer not null);
create table edu_exam.exam_activities_rooms (exam_activity_id bigint not null, exam_room_id bigint not null);
create table edu_exam.exam_clazzes (task_id bigint, exam_type_id integer not null, std_count integer not null, depart_arranged boolean not null, clazz_id bigint not null, exam_week integer, exam_paper_no varchar(255), id bigint not null);
create table edu_exam.exam_groups (semester_id integer not null, state integer not null, exam_type_id integer not null, id bigint not null, begin_on date not null, alloc_setting_id bigint not null, max_course_conflict_ratio float4 not null, min_course_conflict_count integer not null, end_on date not null, name varchar(255) not null, updated_at timestamp not null, allow_in_class boolean not null, project_id integer not null);
create table edu_exam.exam_groups_rooms (exam_group_id bigint not null, classroom_id bigint not null);
create table edu_exam.exam_rooms (semester_id integer not null, exam_type_id integer not null, std_count integer not null, id bigint not null, teach_depart_id integer not null, end_at smallint not null, begin_at smallint not null, exam_on date not null, room_id bigint not null);
create table edu_exam.exam_rooms_activities (exam_room_id bigint not null, exam_activity_id bigint not null);
create table edu_exam.exam_takers (semester_id integer not null, exam_status_id integer not null, clazz_id bigint not null, exam_type_id integer not null, exam_room_id bigint, std_id bigint not null, id bigint not null, remark varchar(255), seat_no smallint not null, activity_id bigint);
create table edu_exam.exam_tasks (semester_id integer not null, duration smallint not null, exam_week smallint, project_id integer not null, room_type_id integer, code varchar(255) not null, id bigint not null, max_course_conflict_ratio float4, exam_on date, group_id bigint, depart_arranged boolean not null, end_at smallint not null, exam_type_id integer not null, room_group_id bigint, begin_at smallint not null, time_allotted boolean not null, building_id integer, std_count integer not null, teach_depart_id integer not null, remark varchar(255));
create table edu_exam.exam_tasks_rooms (exam_task_id bigint not null, classroom_id bigint not null);
create table edu_exam.exam_turns (begin_at smallint not null, id bigint not null, exam_on date not null, group_id bigint not null, capacity integer, end_at smallint not null);
create table edu_exam.final_makeup_courses (semester_id integer not null, course_id bigint not null, teacher_id bigint, project_id integer not null, std_count integer not null, input_at timestamp, crn varchar(255) not null, depart_id integer not null, confirmed boolean not null, published boolean not null, id bigint not null);
create table edu_exam.final_makeup_courses_squads (final_makeup_course_id bigint not null, squad_id bigint not null);
create table edu_exam.final_makeup_takers (updated_at timestamp not null, course_type_id integer not null, makeup_course_id bigint not null, std_id bigint not null, id bigint not null, remark varchar(255), scores varchar(255) not null);
create table edu_exam.invigilation_clazz_quotas (teacher_id bigint not null, id bigint not null, ratio float4 not null, period float4 not null, clazz_id bigint not null, quota float4 not null);
create table edu_exam.invigilation_quota_details (quota_id bigint not null, amount float4 not null, id bigint not null, depart_id integer not null, campus_id integer not null);
create table edu_exam.invigilation_quotas (semester_id integer not null, project_id integer not null, invigilator_id bigint not null, amount integer not null, id bigint not null, remark varchar(255));
create table edu_exam.invigilation_quotas_excludes (invigilation_quota_id bigint not null, exclude_on date not null);
create table edu_exam.invigilations (chief boolean not null, invigilator_name varchar(255), updated_at timestamp not null, department_id integer not null, id bigint not null, invigilator_id bigint, published boolean not null, exam_room_id bigint not null);
create table edu_exam.room_alloc_settings (name varchar(255) not null, project_id integer not null, exam_type_id integer not null, alloc_policy integer not null, min_occupy_ratio float4 not null, min_capacity integer not null, id bigint not null);
create table edu_exam.room_groups (project_id integer not null, id bigint not null, name varchar(255) not null, updated_at timestamp not null);
create table edu_exam.room_groups_rooms (room_group_id bigint not null, classroom_id bigint not null);
create table edu_extern.exam_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_extern.exam_subjects (id integer not null, begin_on date not null, category_id integer not null, institution_code varchar(255), end_on date, institution_name varchar(255), updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_extern.extern_exam_grades (certificate varchar(80), acquired_on date not null, score float4, passed boolean not null, std_id bigint not null, exam_no varchar(80), id bigint not null, status integer not null, grading_mode_id integer not null, score_text varchar(5) not null, subject_id integer not null, exam_status_id integer not null);
create table edu_extern.extern_exam_grades_grades (extern_exam_grade_id bigint not null, course_grade_id bigint not null);
create table edu_extern.extern_grades (school_id integer not null, major_name varchar(255), acquired_on date not null, std_id bigint not null, id bigint not null, category_id integer not null, course_name varchar(255) not null, score_text varchar(255) not null, level_id integer not null, passed boolean not null, credits float4 not null);
create table edu_extern.extern_grades_course_grades (extern_grade_id bigint not null, course_grade_id bigint not null);
create table edu_extern.extern_schools (name varchar(255) not null, project_id integer not null, id integer not null);
create table edu_grade.course_grade_states (updated_at timestamp not null, precision integer not null, clazz_id bigint not null, end_on date, id bigint not null, status integer not null, begin_on date not null, grading_mode_id integer not null, operator varchar(100) not null);
create table edu_grade.course_grades (semester_id integer not null, course_id bigint not null, course_type_id integer not null, project_id integer not null, score float4, passed boolean not null, id bigint not null, remark varchar(200), crn varchar(20) not null, grading_mode_id integer not null, gp float4, score_text varchar(5), free_listening boolean not null, updated_at timestamp not null, clazz_id bigint, std_id bigint not null, exam_mode_id integer not null, operator varchar(100), status integer not null, course_take_type_id integer not null);
create table edu_grade.exam_grade_states (updated_at timestamp not null, grade_state_id bigint not null, id bigint not null, remark varchar(255), percent smallint, end_on date, grade_type_id integer not null, status integer not null, begin_on date not null, grading_mode_id integer not null, operator varchar(100) not null);
create table edu_grade.exam_grades (updated_at timestamp not null, exam_status_id integer not null, score float4, passed boolean not null, id bigint not null, percent smallint, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu_grade.ga_grade_states (updated_at timestamp not null, grade_state_id bigint not null, id bigint not null, remark varchar(50), end_on date, grade_type_id integer not null, status integer not null, begin_on date not null, grading_mode_id integer not null, operator varchar(100) not null);
create table edu_grade.ga_grades (updated_at timestamp not null, score float4, passed boolean not null, id bigint not null, gp float4, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, delta float4, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu_grade.grade_rate_configs (project_id integer not null, pass_score float4 not null, id bigint not null, grading_mode_id integer not null);
create table edu_grade.grade_rate_items (max_score float4 not null, default_score float4 not null, gp_exp varchar(255), config_id bigint not null, min_score float4 not null, id bigint not null, grade varchar(255) not null);
create table edu_grade.moral_grades (semester_id integer not null, score float4, passed boolean not null, std_id bigint not null, id bigint not null, grading_mode_id integer not null, score_text varchar(5) not null, operator varchar(100) not null, status integer not null);
create table edu_grade.std_gpas (gpa float4 not null, credits float4 not null, std_id bigint not null, id bigint not null, total_credits float4 not null, count integer not null, updated_at timestamp not null, project_id integer not null, ga float4 not null);
create table edu_grade.std_semester_gpas (semester_id integer not null, count integer not null, ga float4 not null, gpa float4 not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, total_credits float4 not null);
create table edu_grade.std_year_gpas (count integer not null, ga float4 not null, gpa float4 not null, school_year varchar(255) not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, total_credits float4 not null);
create table edu_graduation.course_audit_results (course_id bigint not null, passed boolean not null, remark varchar(50), scores varchar(50) not null, compulsory boolean not null, group_result_id bigint not null, id bigint not null);
create table edu_graduation.degree_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table edu_graduation.degree_results (updated_at timestamp not null, degree_id integer, gpa float4 not null, published boolean not null, passed boolean not null, id bigint not null, session_id bigint not null, degree_comments varchar(500), foreign_lang_passed_on date, ga float4 not null, locked boolean not null, std_id bigint not null);
create table edu_graduation.graduate_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table edu_graduation.graduate_results (elected_credits float4 not null, updated_at timestamp not null, required_credits float4 not null, published boolean not null, passed boolean not null, education_result_id integer not null, id bigint not null, session_id bigint not null, acquired_credits float4 not null, graduate_comments varchar(500), locked boolean not null, std_id bigint not null);
create table edu_graduation.graduate_sessions (name varchar(100) not null, project_id integer not null, id bigint not null, graduate_on date not null, degree_offered boolean not null);
create table edu_graduation.group_audit_results (name varchar(100) not null, course_type_id integer not null, id bigint not null, indexno varchar(255) not null, parent_id bigint, required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, passed boolean not null, sub_count smallint not null, plan_result_id bigint not null);
create table edu_graduation.offset_credits (updated_at timestamp not null, credits float4 not null, std_id bigint not null, id bigint not null);
create table edu_graduation.plan_audit_results (required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, updated_at timestamp not null, archived boolean not null, passed boolean not null, std_id bigint not null, id bigint not null, updates varchar(500) not null, remark varchar(100));
create table edu_program.execution_course_groups (course_type_id integer not null, course_count smallint not null, alias varchar(100), id bigint not null, term_credits varchar(40) not null, plan_id bigint not null, parent_id bigint, credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu_program.execution_plan_courses (course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu_program.execution_plans (program_id bigint not null, updated_at timestamp not null, state integer not null, credits float4 not null, department_id integer not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, std_type_id integer, campus_id integer, end_on date not null, start_term smallint not null);
create table edu_program.major_alt_courses (updated_at timestamp not null, project_id integer not null, to_grade varchar(10) not null, direction_id bigint, department_id integer, id bigint not null, from_grade varchar(10) not null, std_type_id integer, major_id bigint, level_id integer not null);
create table edu_program.major_alt_courses_news (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu_program.major_alt_courses_olds (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu_program.major_course_groups (course_type_id integer not null, course_count smallint not null, alias varchar(100), id bigint not null, term_credits varchar(40) not null, plan_id bigint not null, parent_id bigint, credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu_program.major_plan_courses (course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu_program.major_plans (program_id bigint not null, updated_at timestamp not null, state integer not null, credits float4 not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, end_on date not null, start_term smallint not null);
create table edu_program.programs (duration float4 not null, project_id integer not null, direction_id bigint, department_id integer not null, id bigint not null, begin_on date not null, std_type_id integer, study_type_id integer not null, degree_gpa float4, end_on date, major_id bigint not null, level_id integer not null, name varchar(100) not null, updated_at timestamp not null, state integer not null, degree_id integer, grade varchar(10) not null, remark varchar(200), campus_id integer, offset_type_id integer not null);
create table edu_program.share_course_groups (course_type_id integer not null, id bigint not null, language_id integer, plan_id bigint not null, parent_id bigint, course_ability_rate_id integer, indexno varchar(255) not null);
create table edu_program.share_plan_courses (course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null);
create table edu_program.share_plans (project_id integer not null, to_grade varchar(255) not null, id bigint not null, remark varchar(200), end_on date not null, level_id integer not null, name varchar(255) not null, updated_at timestamp not null, from_grade varchar(255) not null, begin_on date not null);
create table edu_program.std_alt_courses (updated_at timestamp not null, std_id bigint not null, id bigint not null);
create table edu_program.std_alt_courses_news (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu_program.std_alt_courses_olds (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu_program.std_course_groups (course_type_id integer not null, course_count smallint not null, id bigint not null, term_credits varchar(255) not null, plan_id bigint not null, parent_id bigint, credits float4 not null, sub_count smallint not null, indexno varchar(20) not null, remark varchar(200));
create table edu_program.std_plan_courses (course_id bigint not null, id bigint not null, terms integer not null, compulsory boolean not null, group_id bigint not null, remark varchar(200));
create table edu_program.std_plans (program_id bigint not null, updated_at timestamp not null, state integer not null, credits float4 not null, std_id bigint not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, end_on date not null, start_term smallint not null);
create table edu_program.term_campuses (program_id bigint not null, id bigint not null, terms integer not null, campus_id integer not null);
create table edu_student.admissions (enroll_mode_id integer, letter_no varchar(30), std_id bigint not null, department_id integer not null, id bigint not null, admission_index integer, enroll_on date not null, education_mode_id integer, major_id bigint not null);
create table edu_student.contacts (std_id bigint not null, id bigint not null, mail varchar(100), address varchar(150), mobile varchar(20), phone varchar(20));
create table edu_student.education_records (school varchar(255) not null, std_id bigint not null, id bigint not null, begin_on date not null, end_on date not null);
create table edu_student.examinees (school_no varchar(30), score float4, id bigint not null, graduate_on date, school_name varchar(200), std_id bigint not null, origin_division_id integer, exam_no varchar(30), code varchar(30) not null, province varchar(50));
create table edu_student.examinees_scores (examinee_id bigint not null, score float4 not null, name integer not null);
create table edu_student.graduations (updated_at timestamp not null, degree_id integer, foreign_lang_passed_on date, degree_award_on date, education_result_id integer not null, std_id bigint not null, code varchar(255) not null, id bigint not null, graduate_on date not null, diploma_no varchar(255));
create table edu_student.homes (police varchar(150), postcode varchar(20), railway_station_id integer, std_id bigint not null, former_addr varchar(100), id bigint not null, phone varchar(20), police_phone varchar(20), address varchar(150));
create table edu_student.registers (checkin boolean, registered boolean, operate_ip varchar(100) not null, std_id bigint not null, register_at timestamp, id bigint not null, remark varchar(50), unregistered_reason_id integer, operate_by varchar(50) not null, tuition_paid boolean, uncheckin_reason_id integer, semester_id integer not null);
create table edu_student.social_relations (name varchar(255) not null, relation varchar(255) not null, std_id bigint not null, id bigint not null);
create table edu_student.std_alteration_items (alteration_id bigint not null, oldtext varchar(255), oldvalue varchar(100), newtext varchar(255), newvalue varchar(255), id bigint not null, meta integer not null);
create table edu_student.std_alterations (semester_id integer not null, updated_at timestamp not null, effective boolean not null, std_id bigint not null, code varchar(255) not null, id bigint not null, remark varchar(255), begin_on date not null, alter_type_id integer not null, end_on date not null, reason_id integer);
create table edu_student.uncheckin_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_student.unregistered_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu_textbook.clazz_book_stats (clazz_id bigint not null, std_count integer not null, stat_at timestamp not null, id bigint not null, textbook_id bigint not null, teacher_count integer not null);
create table edu_textbook.std_book_orders (semester_id integer not null, course_id bigint not null, std_id bigint not null, id bigint not null, teach_depart_id integer not null, teacher_names varchar(255), crn varchar(255) not null, created_at timestamp not null, textbook_id bigint not null, withdraw_at timestamp, withdrawed boolean not null, project_id integer not null);
create table edu_workload.capacity_factors (name varchar(255) not null, id bigint not null, condition varchar(255) not null, remark varchar(255), begin_on date not null, end_on date);
create table edu_workload.factor_segments (max_capacity integer not null, factor_exp varchar(255) not null, factor_id bigint not null, min_capacity integer not null, id bigint not null);
create table edu_workload.teaching_loads (semester_id integer not null, teacher_title_id integer not null, course_id bigint not null, clazz_id bigint not null, capacity_factor_id bigint not null, load float4 not null, std_count integer not null, factor float4 not null, id bigint not null, period integer not null);
create table edu_workload.teaching_loads_clazz_tags (teaching_load_id bigint not null, clazz_tag_id integer not null);
create table hr_base.duty_infoes (name varchar(255) not null, duty_type_id integer not null, id bigint not null, staff_id bigint not null, end_on date, begin_on date not null, duty_grade_id integer not null);
create table hr_base.education_infoes (certificate_no varchar(50) not null, degree_id integer not null, witness varchar(255) not null, education_degree_id integer not null, id bigint not null, remark varchar(255) not null, begin_on date not null, staff_id bigint not null, end_on date, major varchar(100) not null, duration float4 not null, school varchar(200) not null, study_type_id integer not null, content varchar(255) not null);
create table hr_base.family_members (name varchar(50) not null, political_status_id integer not null, job_status_id integer not null, country_id integer not null, code varchar(255) not null, id bigint not null, staff_id bigint not null, title_id integer not null, mobile varchar(255) not null, sid varchar(50) not null, work_place varchar(255) not null, birthday date not null, id_type_id integer not null, email varchar(255) not null, nation_id integer not null, family_relationship_id integer not null, annual_income float4 not null, health_status_id integer not null, job varchar(255) not null);
create table hr_base.healths (weight float4 not null, blood_type_id integer not null, health_status_id integer not null, height float4 not null, id bigint not null, staff_id bigint not null);
create table hr_base.post_infoes (post_grade_id integer not null, id bigint not null, begin_on date not null, end_on date, parttime boolean not null, post_type_id integer not null, staff_id bigint not null);
create table hr_base.staff_states (department_id integer not null, id bigint not null, staff_id bigint not null, end_on date, begin_on date not null, status_id integer not null);
create table hr_base.staffs (work_start_on date not null, state_id bigint not null, employ_on date not null, employ_type_id integer not null, code varchar(30) not null, id bigint not null, person_id bigint not null, updated_at timestamp not null, source_type_id integer not null, registed boolean not null, staff_type_id integer not null);
create table hr_base.title_infoes (id bigint not null, begin_on date not null, staff_id bigint not null, title_id integer not null, end_on date);
create table hr_base.tutor_infoes (tutor_type_id integer not null, id bigint not null, begin_on date not null, staff_id bigint not null, end_on date);
create table hr_base.work_infoes (admin_position varchar(255) not null, witness varchar(255) not null, id bigint not null, remark varchar(255) not null, begin_on date not null, staff_id bigint not null, title_id integer not null, end_on date, work_place varchar(255) not null, work_content varchar(255) not null);
create table hr_contact.addresses (geo varchar(50) not null, postal_code varchar(30) not null, id bigint not null, pref integer not null, pobox varchar(50) not null, region varchar(50) not null, street varchar(100) not null, locality varchar(80) not null, extended varchar(30) not null, country_id integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.contacts (updated_at timestamp not null, uuid varchar(60) not null, revision bigint not null, anniversary date, person_id bigint not null, sort_as varchar(100) not null, id bigint not null);
create table hr_contact.emails (email varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.geos (longitude float8 not null, id bigint not null, pref integer not null, latitude float8 not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.impps (id bigint not null, pref integer not null, impp varchar(100) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.nicknames (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.notes (id bigint not null, pref integer not null, note varchar(500) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.orgs (name varchar(100) not null, id bigint not null, pref integer not null, unit varchar(50) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.photos (uri varchar(150) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.relateds (id bigint not null, contact_id bigint not null, related varchar(150) not null, pref integer not null, typenames varchar(100) not null);
create table hr_contact.roles (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.telephones (tel varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.timezones (timezone varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.titles (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.urls (url varchar(150) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr_contact.xtendeds (xname varchar(50) not null, xvalue varchar(200) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table lg_room.occupancies (updated_at timestamp not null, user_app_id bigint not null, activity_id bigint not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, room_id integer not null, comments varchar(300) not null, activity_type_id integer not null, id bigint not null);
create table lg_room.user_apps (activity_url varchar(200) not null, name varchar(200) not null, id bigint not null);
create table sin_harvest.assume_roles (code varchar(10) not null, name varchar(80) not null, id integer not null);
create table sin_harvest.harvest_types (parent_id integer not null, name varchar(80) not null, code varchar(10) not null, id integer not null);
create table sin_harvest.literature_members (researcher_id bigint not null, literature_id integer not null, id integer not null, contribution_count float4 not null, name varchar(80) not null, assume_role_id integer not null, department_id integer not null, sign integer not null);
create table sin_harvest.literatures (researcher_id bigint not null, harvest_type_id integer not null, publish_house varchar(255) not null, published_on date not null, id integer not null, isbn varchar(100) not null, confirm boolean not null, name varchar(300) not null, count float4 not null, introduction varchar(2000) not null, department_id integer not null, translated boolean not null);
create table sin_harvest.published_ranges (code varchar(10) not null, name varchar(80) not null, id integer not null);
create table sin_harvest.published_situations (name varchar(300) not null, harvest_type_id integer not null, en_name varchar(200) not null, cn varchar(100) not null, published_on date not null, translated boolean not null, id integer not null, isbn varchar(100) not null, position varchar(255) not null, published_range_id integer not null, issn varchar(100) not null);
create table sin_harvest.researchers (person_id bigint not null, id bigint not null);
create table sin_harvest.thesis_harvests (published_situation_id integer not null, department_id integer not null, id integer not null, confirm boolean not null, summary varchar(2000) not null, apply_on date not null, researcher_id bigint not null, name varchar(300) not null, count integer not null);
create table std_job.employment_statuses (code varchar(40) not null, name varchar(80) not null, id bigint not null);
create table std_job.graduate_sessions (code varchar(40) not null, name varchar(80) not null, id bigint not null);
create table std_job.graduates (std_source varchar(100) not null, std_id bigint not null, id bigint not null, session_id bigint not null);
create table std_job.std_employments (std_id bigint not null, id bigint not null, employment_status_id bigint not null);
