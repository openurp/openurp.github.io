create table bulletin.attachments (updated_at timestamp not null, size int4 not null, file_name varchar(255) not null, id int8 not null, content bytea not null, primary key (id));
create table bulletin.docs (archived boolean not null, id int8 not null, app_id int4 not null, name varchar(255) not null, updated_at timestamp not null, upload_by_id int8 not null, file_id int8 not null, primary key (id));
create table bulletin.docs_user_categories (doc_id int8 not null, user_category_id int4 not null, primary key (doc_id, user_category_id));
create table bulletin.news (url varchar(255) not null, archived boolean not null, published_on date not null, id int8 not null, content text, title varchar(255) not null, primary key (id));
create table bulletin.notices (updated_at timestamp not null, archived boolean not null, popup boolean not null, id int8 not null, app_id int4 not null, title varchar(255) not null, end_on date not null, begin_on date not null, operator_id int8 not null, status int4 not null, sticky boolean not null, created_at timestamp not null, content text not null, auditor_id int8, published_at timestamp, primary key (id));
create table bulletin.notices_docs (notice_id int8 not null, doc_id int8 not null, primary key (notice_id, doc_id));
create table bulletin.notices_user_categories (notice_id int8 not null, user_category_id int4 not null, primary key (notice_id, user_category_id));
create table bulletin.sensitive_words (id int4 not null, content varchar(30) not null, primary key (id));
create table cfg.app_types (name varchar(255) not null, id int4 not null, title varchar(255) not null, primary key (id));
create table cfg.apps (secret varchar(200) not null, name varchar(100) not null unique, app_type_id int4 not null, url varchar(200) not null, enabled boolean not null, logo_url varchar(255), base varchar(255) not null, id int4 not null, remark varchar(200), indexno varchar(50) not null, title varchar(100) not null, domain_id int4 not null, nav_style varchar(50), primary key (id));
create table cfg.credentials (username varchar(100) not null, id int4 not null, password varchar(200) not null, name varchar(100) not null, expired_at timestamp not null, updated_at timestamp not null, primary key (id));
create table cfg.data_sources (name varchar(100) not null, db_id int4 not null, id int4 not null, app_id int4 not null, credential_id int4 not null, maximum_pool_size int4 not null, remark varchar(200), primary key (id));
create table cfg.dbs (name varchar(100) not null unique, url varchar(200), server_name varchar(100) not null, id int4 not null, remark varchar(200), driver varchar(100) not null, database_name varchar(100) not null, port_number int4 not null, primary key (id));
create table cfg.dbs_properties (db_id int4 not null, value varchar(255) not null, name varchar(255) not null, primary key (db_id, value, name));
create table cfg.domains (name varchar(100) not null unique, id int4 not null, indexno varchar(255) not null, title varchar(200) not null, parent_id int4, primary key (id));
create table cfg.orgs (name varchar(100) not null, www_url varchar(200) not null, logo_url varchar(200) not null, code varchar(50) not null unique, id int4 not null, remark varchar(255), short_name varchar(100) not null, primary key (id));
create table se.app_permissions (begin_at timestamp not null, restrictions varchar(500), id int4 not null, resource_id int4 not null, end_at timestamp, actions varchar(500), app_id int4 not null, primary key (id));
create table se.data_permissions (role_id int4, description varchar(100) not null, restrictions varchar(255), attrs varchar(255), id int8 not null, filters varchar(600) not null, func_resource_id int4, end_at timestamp, begin_at timestamp not null, domain_id int4 not null, resource_id int4 not null, remark varchar(255), actions varchar(255), app_id int4, primary key (id));
create table se.data_resources (name varchar(200) not null, scope int4 not null, domain_id int4 not null, id int4 not null, remark varchar(200), actions varchar(200), title varchar(200) not null, type_name varchar(200) not null, primary key (id));
create table se.func_permissions (role_id int4 not null, begin_at timestamp not null, restrictions varchar(100), id int8 not null, actions varchar(100), end_at timestamp, resource_id int4 not null, remark varchar(100), primary key (id));
create table se.func_resources (name varchar(200) not null, enabled boolean not null, id int4 not null, remark varchar(200), title varchar(200) not null, scope int4 not null, actions varchar(200), app_id int4 not null, primary key (id));
create table se.menus (name varchar(100) not null, entry_id int4, id int4 not null, remark varchar(100), indexno varchar(50) not null, title varchar(100) not null, parent_id int4, enabled boolean not null, params varchar(200), app_id int4 not null, primary key (id));
create table se.menus_resources (menu_id int4 not null, func_resource_id int4 not null, primary key (menu_id, func_resource_id));
create table usr.avatars (updated_at timestamp not null, image bytea not null, file_name varchar(50) not null, id varchar(50) not null, user_id int8 not null, primary key (id));
create table usr.dimensions (name varchar(40) not null, source varchar(6000) not null, id int4 not null, properties varchar(100) not null, key_name varchar(20) not null, type_name varchar(255) not null, multiple boolean not null, title varchar(40) not null, required boolean not null, primary key (id));
create table usr.dimensions_domains (dimension_id int4 not null, domain_id int4 not null, primary key (dimension_id, domain_id));
create table usr.group_members (updated_at timestamp not null, id int8 not null, member boolean not null, manager boolean not null, granter boolean not null, group_id int4 not null, user_id int8 not null, primary key (id));
create table usr.groups (enabled boolean not null, id int4 not null, remark varchar(255), indexno varchar(255) not null, parent_id int4, name varchar(100) not null, updated_at timestamp not null, creator_id int8 not null, primary key (id));
create table usr.groups_properties (group_id int4 not null, value varchar(2000) not null, dimension_id int4 not null, primary key (group_id, value, dimension_id));
create table usr.messages (recipient_id int8 not null, id int8 not null, status int4 not null, content varchar(255) not null, sender_id int8 not null, sent_at timestamp not null, title varchar(255) not null, primary key (id));
create table usr.notifications (recipient_id int8 not null, subject varchar(255) not null, importance int4 not null, id int8 not null, content varchar(255) not null, sent_at timestamp not null, primary key (id));
create table usr.role_members (updated_at timestamp not null, role_id int4 not null, id int8 not null, member boolean not null, manager boolean not null, granter boolean not null, user_id int8 not null, primary key (id));
create table usr.roles (enabled boolean not null, id int4 not null, remark varchar(255), indexno varchar(255) not null, parent_id int4, name varchar(100) not null, updated_at timestamp not null, creator_id int8 not null, primary key (id));
create table usr.roles_properties (role_id int4 not null, value varchar(2000) not null, dimension_id int4 not null, primary key (role_id, value, dimension_id));
create table usr.roots (updated_at timestamp not null, id int4 not null, app_id int4 not null, user_id int8 not null, primary key (id));
create table usr.todoes (updated_at timestamp not null, domain_id int4 not null, id int8 not null, content varchar(255) not null, user_id int8 not null, primary key (id));
create table usr.user_categories (en_name varchar(255) not null, code varchar(30) not null unique, id int4 not null, remark varchar(255), begin_on date not null, end_on date, name varchar(100) not null, updated_at timestamp not null, primary key (id));
create table usr.user_profiles (domain_id int4 not null, id int8 not null, user_id int8 not null, primary key (id));
create table usr.user_profiles_properties (user_profile_id int8 not null, value varchar(2000) not null, dimension_id int4 not null, primary key (user_profile_id, value, dimension_id));
create table usr.users (enabled boolean not null, locked boolean not null, code varchar(30) not null unique, begin_on date not null, category_id int4 not null, end_on date, avatar_id varchar(255), password varchar(200) not null, name varchar(100) not null, updated_at timestamp not null, password_expired_on timestamp, id int8 not null, remark varchar(100), primary key (id));
create table usr.users_properties (user_id int8 not null, value varchar(2000) not null, dimension_id int4 not null, primary key (user_id, value, dimension_id));
